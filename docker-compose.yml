version: '3.8'

services:
  web:
    build: 
      context: ./src/app
      dockerfile: Dockerfile
    command: |
      bash -c 'uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8003'
    volumes:
      - ./src/app:/usr/src/app/
    ports:
      - 8003:8003

#  mock:
#    build: 
#      context: ./src/mocks
#      dockerfile: Dockerfile
#    command: |
#      bash -c 'uvicorn sdn_controllers:app --reload --workers 1 --host 0.0.0.0 --port 8004'
#    volumes:
#      - ./src/mocks:/usr/src/mocks/
#    ports:
#      - 8004:8004
    # environment:
    #   - DATABASE_URL=postgresql://hello_fastapi:hello_fastapi@db/hello_fastapi_dev
    # networks:
    #   - tsn-cm
  # db:
  #   image: postgres:15.1-alpine
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   expose:
  #     - 5432
  #   environment:
  #     - POSTGRES_USER=hello_fastapi
  #     - POSTGRES_PASSWORD=hello_fastapi
  #     - POSTGRES_DB=hello_fastapi_dev

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    # networks:
    #   - tsn-cm

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    # networks:
    #   - tsn_cm_network

#  rabbitmq:
#    image: rabbitmq:3-management
#    container_name: rabbitmq
#    restart: always
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    environment:
#      RABBITMQ_DEFAULT_USER: "admin"
#      RABBITMQ_DEFAULT_PASS: "admin123"
#      RABBITMQ_DEFAULT_VHOST: "/"
#    volumes:
#      - rabbitmq_data:/var/lib/rabbitmq
#    # networks:
#    #   - tsn_cm_network

volumes:
  postgres_data:
  mongodb_data:
  # rabbitmq_data:

# networks:
#   tsn-cm:
